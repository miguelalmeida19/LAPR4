@startuml
' ======= layout =========
skinparam backgroundColor #fcf9ea
skinparam titleBorderRoundCorner 15
skinparam titleFontSize 30
skinparam classAttributeIconSize 0
skinparam titleFontName Arial Black
skinparam titleFontColor #f8a978
skinparam roundcorner 20
skinparam stereotypeCBackgroundColor ffc5a1
skinparam class {

ArrowColor ffc5a1
BorderColor White
BackgroundColor badfdb
}


' ======= title =========
title <b>SEQUENCE DIAGRAM\n
autonumber
actor "Warehouse Employee" as emp

participant ":ShowDashboardUI" as UI
participant ":ShowDashboardController" as Controller
participant ":HttpServerAgvStatus" as Serv
participant ":WarehouseRepository" as REP
participant ":HttpAgvStatusRequest" as HTTP
participant ":HTTPMessage" as Mess


activate emp
emp -> UI : Requires to see the dashboard
activate UI

UI->Controller: showDashboard()
activate Controller
Controller->Serv:  changeController(controller)
activate Serv
Controller->Serv: start()
Serv->REP: findAll()
activate REP
deactivate REP
Serv->HTTP: run()
activate HTTP
HTTP->Mess: HTTPMessage()
activate Mess
deactivate Mess
deactivate HTTP
Serv->Serv: getPersonalInfo()
Serv->Serv: refreshDashboard()
Serv->Serv: buildFirstLine(lengthSquares)
Serv->Serv: buildColumnsMatrix(warehouse,widthSquares,lengthSquares)
Serv->Serv: buildMatrix(warehouse,widthSquares,lengthSquares)
Serv->Serv: addSquares(widthSquares,lengthSquares,s,matrix,columnsMatrix)
deactivate Serv
deactivate Controller
emp <-- UI: shows the dashboard or failure of the operation
deactivate UI





deactivate UI









@enduml