@startuml
 ' ======= layout =========
 skinparam backgroundColor #fcf9ea
 skinparam titleBorderRoundCorner 15
 skinparam titleFontSize 30
 skinparam classAttributeIconSize 0
 skinparam titleFontName Arial Black
 skinparam titleFontColor #f8a978
 skinparam roundcorner 20
 skinparam stereotypeCBackgroundColor ffc5a1
 skinparam class {

 ArrowColor ffc5a1
 BorderColor White
 BackgroundColor badfdb
 }


 ' ======= title =========
 center header


 endheader
 title <b>US2003 - Class Diagram\n

' ======= classes =========
class ListOrdersController{
+allOrders()
+find(u)
+findByAgvStatus(agvStatus)
+findByOrderStatus(orderStatus)
+findByAgv(agv)

}
class ListAgvController{
+allAgvs()
}
class AssignAgvOrderController{
+setAgvOrder(order,agv)
}
class AssignOrderAgvUI{
}
class OrderManagementService{
 +OrderManagementService(orderRepository)
 +addNewOrder(shippingMethod,orderStatus,createdOn,paymentMethod,orderItems,customer)
 +allOrders()
 +orderOfIdentity(code)
 +findByAgvStatus(agvStatus)
 +findByOrderStatus(orderStatus)
 +setOrderStatus(order)
 +findByAgv(agv)
}
class AgvManagementService{
 +AgvManagementService(agvRepository)
 +addNewAgv(identifier,shortDesc,model,maxWeight,maxVolume,agvDockId)
 +activeAgvs()
 +deactivatedAgvs()
 +allAgvs()
 +AgvOfIdentity(id)
}

class ProductOrder{
+getCustomer()
+ProductOrder(shippingMethod,orderStatus,createdOn,finalPrice,paymentMethod,orderItems,customer)
+ProductOrder()
+equals(o)
+identity()
+shippingMethod()
+orderShippingMethod()
+orderStatus()
+orderState()
+creationDate()
+orderCreationDate()
+finalPrice()
+orderFinalPrice()
+paymentMethod()
+orderPaymentMethod()
+items()
+orderItems()
+isActive()
}
class OrderRepository{
+save(order)
+findByAgvStatus(agvStatus)
+findByOrderStatus(orderStatus)
+findByAgv(agv)
}
class AGVRepository{
+findByActive(boolean active)
+findAll()
}

AssignOrderAgvUI ..> ListOrdersController
AssignOrderAgvUI ..> AssignAgvOrderController
AssignOrderAgvUI ..> ListAgvController
ListOrdersController ..> OrderManagementService
OrderManagementService ..> OrderRepository
OrderRepository ..> ProductOrder
ListAgvController ..> AgvManagementService
AgvManagementService ..> AGVRepository
AssignAgvOrderController ..> OrderManagementService

@enduml